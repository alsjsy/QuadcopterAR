#!/usr/bin/env python
# vim:set ts=4 sw=4 et:
#
# Copyright 2014 Vladimir Ermakov.
#
# This file is part of the mavros package and subject to the license terms
# in the top-level LICENSE file of the mavros repository.
# https://github.com/mavlink/mavros/tree/master/LICENSE.md

from __future__ import print_function

import sys
import argparse
import rospy
import mavros

from tf.transformations import quaternion_from_euler
from tf.transformations import euler_from_quaternion
import tf
from sensor_msgs.msg import Joy
from std_msgs.msg import Header, Float64
from geometry_msgs.msg import PoseStamped, TwistStamped, Vector3, Quaternion, Point, PointStamped
from mavros_msgs.msg import OverrideRCIn
from mavros import setpoint as SP

sp_timer = None
sp_pose = None

def sp_timer_callback(event):
    global sp_pose
    # print(sp_pose.pose)
    mavros.set_namespace("uav1/mavros/") # uav2/mavros/setpoint_position/local
    pos_pub = SP.get_pub_position_local(queue_size=10)

    sp_pose.header.stamp = rospy.get_rostime()
    sp_pose.pose.position = Point(10, 0, 10)
    eu = euler_from_quaternion((0, 0, 0, 1))
    q = quaternion_from_euler(0, 0, -eu[2])
    sp_pose.pose.orientation = Quaternion(*q)
    
    print(sp_pose.pose)

    pos_pub.publish(sp_pose)

    mavros.set_namespace("uav2/mavros/") # uav2/mavros/setpoint_position/local
    pos_pub = SP.get_pub_position_local(queue_size=10)

    sp_pose.header.stamp = rospy.get_rostime()
    sp_pose.pose.position = Point(-10, 0, 10)
    eu = euler_from_quaternion((0, 0, 0, 1))
    q = quaternion_from_euler(0, 0, -eu[2])
    sp_pose.pose.orientation = Quaternion(*q)
    
    print(sp_pose.pose)

    pos_pub.publish(sp_pose)

def main():
    global sp_timer, sp_pose
    rospy.init_node("mavteleop")
    

    if sp_timer is None:
        sp_pose = PoseStamped(header=Header(stamp=rospy.get_rostime(),frame_id="map"))
        sp_timer = rospy.Timer(rospy.Duration(.5), sp_timer_callback)

    rospy.spin()

if __name__ == '__main__':
    main()

